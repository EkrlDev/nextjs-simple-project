{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Dev\\\\WEBDevelopement\\\\Complete-React-Guide\\\\19-next-project1\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetailPage(props) {\n  console.log(props.meetupData);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://erhan:070499@cluster0.1x98kyz.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db(\"MeetupDatabase\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(meetups);\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => {\n      return {\n        params: {\n          meetupId: meetup._id.toString()\n        }\n      };\n    })\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://erhan:070499@cluster0.1x98kyz.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db(\"MeetupDatabase\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  console.log(selectedMeetup);\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetailPage;","map":{"version":3,"sources":["E:/Dev/WEBDevelopement/Complete-React-Guide/19-next-project1/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetailPage","props","console","log","meetupData","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB;AACA,sBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,sFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,CAAU,gBAAV,CAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ;AACAL,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAY;AAC7B,aAAO;AACLC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADH,OAAP;AAGD,KAJM;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,sFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,CAAU,gBAAV,CAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEQ;AAAP,GAA1B,CAA7B;AACAf,EAAAA,MAAM,CAACS,KAAP;AACAb,EAAAA,OAAO,CAACC,GAAR,CAAYsB,cAAZ;AACA,SAAO;AACLxB,IAAAA,KAAK,EAAE;AACLG,MAAAA,UAAU,EAAEqB;AADP;AADF,GAAP;AAKD;AAED,eAAezB,gBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nfunction MeetupDetailPage(props) {\r\n  console.log(props.meetupData);\r\n  return <MeetupDetail />;\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://erhan:070499@cluster0.1x98kyz.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db(\"MeetupDatabase\");\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  console.log(meetups);\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => {\r\n      return {\r\n        params: { meetupId: meetup._id.toString() },\r\n      };\r\n    }),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://erhan:070499@cluster0.1x98kyz.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db(\"MeetupDatabase\");\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n  client.close();\r\n  console.log(selectedMeetup);\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}