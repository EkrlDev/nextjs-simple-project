{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Dev\\\\WEBDevelopement\\\\Complete-React-Guide\\\\19-next-project1\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nfunction MeetupDetailPage(props) {\n  console.log(props.meetupData);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://erhan:070499@cluster0.1x98kyz.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db(\"MeetupDatabase\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => {\n      return {\n        params: {\n          meetupId: meetup._id.toString()\n        }\n      };\n    })\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://erhan:070499@cluster0.1x98kyz.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db(\"MeetupDatabase\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetailPage;","map":{"version":3,"sources":["E:/Dev/WEBDevelopement/Complete-React-Guide/19-next-project1/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","MeetupDetailPage","props","console","log","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB;AACA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEH,KAAK,CAACG,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEJ,KAAK,CAACG,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEL,KAAK,CAACG,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEN,KAAK,CAACG,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,sFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,CAAU,gBAAV,CAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAY;AAC7B,aAAO;AACLC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADH,OAAP;AAGD,KAJM;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,sFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,CAAU,gBAAV,CAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACrDb,IAAAA,GAAG,EAAElB,QAAQ,CAAC0B,QAAD;AADwC,GAA1B,CAA7B;AAGAf,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLlB,IAAAA,KAAK,EAAE;AACLG,MAAAA,UAAU,EAAE;AACV2B,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADM;AAEVpB,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAFZ;AAGVC,QAAAA,OAAO,EAAEsB,cAAc,CAACtB,OAHd;AAIVF,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAJZ;AAKVG,QAAAA,WAAW,EAAEqB,cAAc,CAACrB;AALlB;AADP;AADF,GAAP;AAWD;AAED,eAAeR,gBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nfunction MeetupDetailPage(props) {\r\n  console.log(props.meetupData);\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://erhan:070499@cluster0.1x98kyz.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db(\"MeetupDatabase\");\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => {\r\n      return {\r\n        params: { meetupId: meetup._id.toString() },\r\n      };\r\n    }),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://erhan:070499@cluster0.1x98kyz.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db(\"MeetupDatabase\");\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}